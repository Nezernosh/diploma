export const structuresQuestions = [
    {
        question: 'Какая размерность может быть у массивов?',
        answers: [
            'Только одномерные',
            'Только одномерные и двумерные',
            'Массивы могут быть и одномерные, и двумерные, и многомерными'],
        correctAnswer: 'Массивы могут быть и одномерные, и двумерные, и многомерными',
    },
    {
        question: 'Что случится при добавлении нового элемента в полностью заполненный динамический массив?',
        answers: [
            'Создастся новый массив, с большей максимальной величиной',
            'Произойдёт переполнение'],
        correctAnswer: 'Создастся новый массив, с большей максимальной величиной',
    },
    {
        question: 'Можно ли реализовать операции Insert и Delete над динамическим множеством в однокрастно связанном списке так, чтобы их время работы было равно O(1)?',
        answers: [
            'Да',
            'Нет'],
        correctAnswer: 'Да',
    },
    {
        question: 'Какой элемент удаляется из стека при вызове операции Pop?',
        answers: [
            'Первый',
            'Последний',
            'Какой указать, такой и удалится'],
        correctAnswer: 'Последний',
    },
    {
        question: 'Какое из следующих утверждений о хеш-таблицах верно?',
        answers: [
            'Хэш-таблицы не позволяют извлекать сохраненные данные',
            'Все ключи в хеш-таблице связаны с уникальным значением',
            'Каждое значение в хеш-таблице связано с уникальным ключом',],
        correctAnswer: 'Каждое значение в хеш-таблице связано с уникальным ключом',
    },
    {
        question: 'Какое из следующих утверждений верно относительно двоичных деревьев поиска (BST)?',
        answers: [
            'В BST все узлы в левом поддереве имеют значения, превышающие ключ узла',
            'В BST правый дочерний узел всегда имеет меньшее значение, чем родительский узел',
            'В BST все узлы в правом поддереве имеют значения, превышающие ключ узла',
            'BST не может иметь глубину больше 3',
            'Все узлы в BST должны иметь два дочерних узла',],
        correctAnswer: 'В BST все узлы в правом поддереве имеют значения, превышающие ключ узла',
    },
    {
        question: 'Что из следующего верно о красно-черных деревьях?',
        answers: [
            'Красно-черное дерево — это тип бинарного дерева поиска, в котором все узлы окрашены либо в красный, либо в зеленый цвет',
            'Корневой узел красно-черного дерева всегда красный',
            'Красный узел может иметь красного потомка в красно-черном дереве',
            'Каждый путь от узла к листу-потомку содержит одинаковое количество черных узлов',],
        correctAnswer: 'Каждый путь от узла к листу-потомку содержит одинаковое количество черных узлов',
    },
    {
        question: 'Какое утверждение верно относительно префиксного дерева?',
        answers: [
            'Это тип дерева, используемый для обработки коллизий в хеш-таблицах',
            'Каждый узел в дереве префиксов соответствует слову или префиксу',
            'Корневой узел дерева префиксов всегда представляет собой букву английского алфавита',],
        correctAnswer: 'Каждый узел в дереве префиксов соответствует слову или префиксу',
    },
    {
        question: 'Какое из этих утверждений о графах верно?',
        answers: [
            'В графе узел не может быть соединен сам с собой',
            'Каждый неориентированный граф должен содержать цикл',
            'В ориентированном графе ребра всегда должны быть двунаправленными',
            'Каждое ребро графа соединяет ровно две вершины',],
        correctAnswer: 'Каждое ребро графа соединяет ровно две вершины',
    },
]

export const sortsQuestions = [
    {
        question: `сортировка`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
    {
        question: `сортировка`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
]

export const searchesQuestions = [
    {
        question: `поиск`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
    {
        question: `поиск`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
]

export const graphsQuestions = [
    {
        question: `графы`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
    {
        question: `графы`,
        answers: [5, 1, 2, 5, 9],
        correctAnswer: 9,
    },
]